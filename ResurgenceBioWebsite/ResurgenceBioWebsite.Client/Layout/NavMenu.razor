@inject IJSRuntime JsRuntime

<div class="relative flex flex-row overflow-x-clip !border-[#2f375a]" style="border-bottom: 1px solid;">
    <nav @onmouseover="MenuPersistence" @onmouseleave="HideAndResetMenuPersistence" class="container mx-auto flex flex-row items-center space-x-2 p-2 lg:p-3">
        <div class="group flex flex-row items-center max-lg:flex-none lg:hidden">
            <button class="flex cursor-pointer items-center justify-center rounded border-none bg-[#202641] p-1 no-underline shadow-none hover:bg-[#2f375a] focus:outline-none active:transform-none">
                <svg class="stroke-[#219899] max-md:h-9 max-md:w-9 md:max-lg:h-11 md:max-lg:w-11">
                    <use href="icons/nav.svg#nav-icon"></use>
                </svg>
            </button>
        </div>

        <div class="max-lg:hidden max-lg:flex-none lg:w-40 lg:shrink-0">
            <a href="" class="space-x1 flex cursor-pointer flex-row items-center space-x-1.5 px-2 py-1">
                <img src="./images/resurgence-bio.png" alt="" class="h-9" />
                @* <img src="https://flowbite.com/docs/images/logo.svg" alt="Home" class="width-auto h-5" /> *@
                @* <p class="text-white">ResurgenceBio</p> *@
            </a>
        </div>

        <div class="h-full max-lg:hidden lg:flex lg:flex-1 lg:items-center lg:justify-center lg:space-x-4">
            <div @onmouseover="() => ShowMenu(_aboutUs)" @onmouseleave="() => HideMenu(_aboutUs)" class="flex h-full flex-col justify-center">
                <p class="m-0 inline-block cursor-default no-underline @(_menuToggleService.IsMenuVisible(_aboutUs) ? "text-[#3cf5f7]" : "text-white")">About Us</p>

                <nav @onmouseover="() => ShowMenu(_aboutUs)" @onmouseleave="() => HideMenu(_aboutUs)" class="absolute top-full z-10 !border-[#2f375a] bg-[#090b34] p-4 shadow flex-col gap-5 min-w-max @(_menuToggleService.IsMenuVisible(_aboutUs) ? "flex" : "hidden")" style="border: 1px solid;">
                    <a @onclick="() => HideMenu(_aboutUs)" href="BoardOfDirectors" class="relative cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]"> Board of Directors </a>
                    <a @onclick="() => HideMenu(_aboutUs)" href="Advisors" class="relative cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]"> Advisors </a>
                    <a @onclick="() => HideMenu(_aboutUs)" href="BoardOfDirectors" class="relative cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]"> Board of Directors </a>
                    <a @onclick="() => HideMenu(_aboutUs)" href="Advisors" class="relative cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]"> Advisors </a>
                    <a @onclick="() => HideMenu(_aboutUs)" href="SafetyReviewCommittee" class="relative cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]">
                        Safety Review <br />
                        Committee (SRC)
                    </a>
                    <a @onclick="() => HideMenu(_aboutUs)" href="AttbAccreditation" class="relative inline-flex cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]">AATB Accreditation</a>
                    <a @onclick="() => HideMenu(_aboutUs)" href="OversightAgreement" class="relative inline-flex cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]"> Oversight Agreements </a>
                </nav>
            </div>

            <div @onmouseover="() => ShowMenu(_publications)" @onmouseleave="() => HideMenu(_publications)" class="flex h-full flex-col justify-center">
                <p class="m-0 inline-block cursor-default no-underline @(_menuToggleService.IsMenuVisible(_publications) ? "text-[#3cf5f7]" : "text-white")">Publications</p>

                <nav @onmouseover="() => ShowMenu(_publications)" @onmouseleave="() => HideMenu(_publications)" class="absolute top-full z-10 !border-[#2f375a] bg-[#090b34] p-4 shadow flex-col gap-5 min-w-max @(_menuToggleService.IsMenuVisible(_publications) ? "flex" : "hidden")" style="border: 1px solid;">
                    <a @onclick="() => HideMenu(_publications)" href="GuidelinesAndPolicies" class="relative inline-flex cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]"> Guidelines and Policies </a>
                    <a @onclick="() => HideMenu(_publications)" href="Reports" class="relative inline-flex cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]"> Reports </a>
                    <a @onclick="() => HideMenu(_publications)" href="Articles" class="relative inline-flex cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]"> Articles </a>
                </nav>
            </div>

            <div @onmouseover="() => ShowMenu(_projects)" @onmouseleave="() => HideMenu(_projects)" class="flex h-full flex-col justify-center">
                <p class="m-0 inline-block cursor-default no-underline @(_menuToggleService.IsMenuVisible(_projects) ? "text-[#3cf5f7]" : "text-white")">Projects</p>

                <nav @onmouseover="() => ShowMenu(_projects)" @onmouseleave="() => HideMenu(_projects)" class="absolute top-full z-10 !border-[#2f375a] bg-[#090b34] p-4 shadow flex-col gap-5 min-w-max @(_menuToggleService.IsMenuVisible(_projects) ? "flex" : "hidden")" style="border: 1px solid;">
                    <a @onclick="() => HideMenu(_projects)" href="LearningPlatform" class="relative inline-flex cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]">Learning Platform</a>
                    <a @onclick="() => HideMenu(_projects)" href="InventoryOperationsManagement" class="relative inline-flex cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]">
                        Inventory Operations <br />
                        Management
                    </a>
                    <a @onclick="() => HideMenu(_projects)" href="DocumentationDevelopment" class="relative inline-flex cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]">
                        Documentation <br />
                        Development
                    </a>
                    <a @onclick="() => HideMenu(_projects)" href="AldehydeStabilizedPreservationProtocol" class="relative inline-flex cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]">
                        Aldehyde Stabilized <br />
                        Preservation Protocol
                    </a>
                </nav>
            </div>

            <a href="Fundraising" class="relative inline-block cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]">Fundraising</a>
            <a href="Volunteering" class="relative inline-block cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]">Volunteering</a>
            <a href="Faq" class="relative inline-block cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7]">FAQ</a>
        </div>

        <div class="flex items-center justify-end space-x-3 max-lg:grow">
            <a href="CaresReporting" class="relative inline-block cursor-pointer text-white no-underline hover:text-white hover:underline hover:decoration-[#3cf5f7] max-lg:hidden">CARES Reporting</a>
            <a href="Emergency" class="relative inline-block cursor-pointer rounded bg-rose-600 px-3 py-2 text-white no-underline hover:bg-rose-400">Emergency</a>
        </div>
    </nav>
</div>

@code
{
    // section: Tailwind CSS styling
    // private const string NavContainer = "";
    // private const string NavItem = "";
    //
    // private const string NavDropdown = "";
    // private const string DropdownContent = "";
    //
    // private const string NavLink = $"{NavItem}";
    // private const string LogoHomeNavImage = $"";

    // section: Component logic
    private Guid _aboutUs = Guid.NewGuid();
    private Guid _publications = Guid.NewGuid();
    private Guid _projects = Guid.NewGuid();

    private MenuToggleService _menuToggleService = new();

    protected override void OnInitialized()
    {
        _menuToggleService.AddMenu(_aboutUs);
        _menuToggleService.AddMenu(_publications);
        _menuToggleService.AddMenu(_projects);
    }

    private void ShowMenu(Guid menuId)
    {
        _menuToggleService.ToggleMenuVisible(menuId);
    }

    private void HideMenu(Guid menuId)
    {
        _menuToggleService.ToggleMenuInvisible(menuId);
        _menuToggleService.LastHovered = menuId;
    }

    private void MenuPersistence()
    {
        _menuToggleService.ToggleMenuVisibleLastHovered();
    }

    private void HideAndResetMenuPersistence()
    {
        _menuToggleService.ToggleMenuInvisibleLastHovered();
    }

    private class MenuToggleService
    {
        private readonly Dictionary<Guid, bool> _menuStates = new();
        public Guid? LastHovered;

        public void AddMenu(Guid menuId)
        {
            _menuStates.TryAdd(menuId, false);
        }

        public void ToggleMenuVisible(Guid menuId)
        {
            ResetAllMenus();
            _menuStates[menuId] = true;
            LastHovered = menuId;
        }

        public void ToggleMenuInvisible(Guid menuId)
        {
            if (_menuStates.ContainsKey(menuId))
            {
                _menuStates[menuId] = false;
            }
        }

        public void ToggleMenuVisibleLastHovered()
        {
            if (LastHovered.HasValue)
            {
                ToggleMenuVisible(LastHovered.Value);
            }
        }

        public void ToggleMenuInvisibleLastHovered()
        {
            if (!LastHovered.HasValue) return;

            ToggleMenuInvisible(LastHovered.Value);
            LastHovered = null;
        }

        public bool IsMenuVisible(Guid menuId)
        {
            return _menuStates.TryGetValue(menuId, out var isVisible) && isVisible;
        }

        public void ResetAllMenus()
        {
            foreach (var key in _menuStates.Keys.ToList())
            {
                _menuStates[key] = false;
            }
        }
    }

}
