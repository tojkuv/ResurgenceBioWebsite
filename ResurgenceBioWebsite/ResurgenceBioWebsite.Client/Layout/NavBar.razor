@inject MobileNavMenuService MobileNavMenuService
@inject NavBarService NavBarService

@inject NavigationManager Navigation

@inject IJSRuntime JsRuntime

@* <div class="flex flex-col items-center justify-center pb-4"> *@
<div class="@_navBarBackground relative overscroll-none w-full flex flex-row items-center justify-center overflow-x-clip !border-primary-300" style="border-bottom: 1px solid;">
    <nav class="container mx-auto flex flex-row items-center justify-center py-2 px-4 lg:py-3 lg:px-5 max-lg:justify-between max-md:h-9 md:max-lg:h-11 lg:h-14">
        <div class="group flex flex-row items-center max-lg:flex-none lg:hidden">
            <a @onclick="(() => { ToggleMobileNavigationMenu(); ResetAllMenus(); })" class="flex items-center justify-center relative cursor-pointer rounded bg-primary-400 lg:px-3 lg:py-2 max-lg:p-1 text-white text-lg font-semibold no-underline hover:bg-secondary-300 max-md:h-7 max-md:w-9 md:max-lg:h-9 md:max-lg:w-11">
                <svg class="stroke-secondary-500 max-md:h-7 max-md:w-9 md:max-lg:h-9 md:max-lg:w-11">
                    <use href="icons/nav.svg#nav-icon"></use>
                </svg>
            </a>
        </div>

        <div class="lg:w-60">
            <a href="" class="cursor-pointer flex flex-row items-center">
                <img src="./logos/resurgence-bio.png" alt="" class="object-contain max-md:h-9 md:max-lg:h-11 lg:h-14 w-full"/>
            </a>
        </div>

        <div class="max-lg:hidden flex-1 flex flex-row items-center justify-center space-x-6 h-full ">
            <a @onclick="ResetAllMenus" href="AboutUs" class="relative cursor-pointer text-white text-lg no-underline hover:underline hover:underline-offset-4 hover:decoration-secondary-300 pe-2">
                About Us
            </a>

            <div class="flex flex-col justify-center w-fit h-fit">
                <div @onclick="() => ToggleMenuVisibility(_elevate)" class="flex flex-row justify-center items-center gap-2 select-none cursor-pointer">
                    <p class="@(IsMenuVisible(_elevate) ? "underline underline-offset-4 decoration-secondary-300" : "") m-0 inline-block text-white text-lg">
                        Elevate
                    </p>

                    <svg class="h-6 w-6 mt-1 fill-white transform transition-transform duration-300 ease-in-out" style="@(IsMenuVisible(_elevate) ? "transform: rotate(180deg);" : "")">
                        <use href="icons/arrow.svg#arrow-icon"></use>
                    </svg>
                </div>

                <nav id="@_elevate.ToString()" class="absolute top-full -ms-4 !border-primary-300 bg-primary-500 p-4 box-border shadow flex-col gap-5 w-[300px] @(IsMenuVisible(_elevate) ? "flex" : "hidden")" style="border: 1px solid;">
                    <a @onclick="ResetAllMenus" href="AatbAccreditation" class="relative inline-flex cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        AATB Accreditation
                    </a>
                    <a @onclick="ResetAllMenus" href="CaresReporting" class="relative inline-flex cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        CARES Reporting
                    </a>
                    <a @onclick="ResetAllMenus" href="SpearInitiative" class="relative inline-flex cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        SPEAR Initiative
                    </a>
                    <a @onclick="ResetAllMenus" href="Beacon" class="relative inline-flex cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        BEACON
                    </a>
                </nav>
            </div>

            <div class="flex flex-col justify-center w-fit h-fit">
                <div @onclick="() => ToggleMenuVisibility(_educate)" class="flex flex-row justify-center items-center gap-2 select-none cursor-pointer">
                    <p class="@(IsMenuVisible(_educate) ? "underline underline-offset-4 decoration-secondary-300" : "") m-0 inline-block text-white text-lg">
                        Educate
                    </p>

                    <svg class="h-6 w-6 mt-1 fill-white transform transition-transform duration-300 ease-in-out" style="@(IsMenuVisible(_educate) ? "transform: rotate(180deg);" : "")">
                        <use href="icons/arrow.svg#arrow-icon"></use>
                    </svg>
                </div>

                <nav id="@_educate.ToString()" class="absolute top-full -ms-4 !border-primary-300 bg-primary-500 p-4 box-border shadow flex-col gap-5 w-[300px] @(IsMenuVisible(_educate) ? "flex" : "hidden")" style="border: 1px solid;">
                    <a @onclick="ResetAllMenus" href="TheStasisKnowledgeHub" class="relative inline-flex cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        The Stasis Knowledge Hub
                    </a>
                    <a @onclick="ResetAllMenus" href="Volunteering" class="relative inline-block cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        Volunteering
                    </a>
                </nav>
            </div>

            <div class="flex flex-col justify-center w-fit h-fit">
                <div @onclick="() => ToggleMenuVisibility(_innovate)" class="flex flex-row justify-center items-center gap-2 select-none cursor-pointer">
                    <p class="@(IsMenuVisible(_innovate) ? "underline underline-offset-4 decoration-secondary-300" : "") m-0 inline-block text-white text-lg">
                        Innovate
                    </p>

                    <svg class="h-6 w-6 mt-1 fill-white transform transition-transform duration-300 ease-in-out" style="@(IsMenuVisible(_innovate) ? "transform: rotate(180deg);" : "")">
                        <use href="icons/arrow.svg#arrow-icon"></use>
                    </svg>
                </div>

                <nav id="@_innovate.ToString()" class="absolute top-full -ms-4 !border-primary-300 bg-primary-500 p-4 box-border shadow flex-col gap-5 w-[300px] @(IsMenuVisible(_innovate) ? "flex" : "hidden")" style="border: 1px solid;">
                    <a @onclick="ResetAllMenus" href="AldehydeStabilizedPreservationProtocol" class="relative inline-flex cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        Aldehyde Stabilized <br/>
                        Preservation Protocol
                    </a>
                    <a @onclick="ResetAllMenus" href="WholeBodyFieldCryoprotection" class="relative inline-flex cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        Whole Body Field Cryoprotection
                    </a>
                    <a @onclick="ResetAllMenus" href="SstOptimization" class="relative inline-flex cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        Standby, Stabilization, and <br/>
                        Transport (SST) Optimization
                    </a>
                    <a @onclick="ResetAllMenus" href="RegionalReadinessDevelopment" class="relative inline-flex cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        Regional Readiness Development
                    </a>
                    <a @onclick="ResetAllMenus" href="RegionalInventoryManagement" class="relative inline-flex cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        Regional Inventory Management
                    </a>
                    <a @onclick="ResetAllMenus" href="DocumentationDevelopment" class="relative inline-flex cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        Documentation Development
                    </a>
                    <a @onclick="ResetAllMenus" href="LifebridgeProgram" class="relative inline-flex cursor-pointer text-white text-lg no-underline hover:text-white hover:underline hover:decoration-secondary-300">
                        Lifebridge Program
                    </a>
                </nav>
            </div>
        </div>

        @* todo refactor: make this anchor button a component *@
        <div class="lg:w-60 flex items-center justify-end md:space-x-3">
            <a @onclick="ResetAllMenus" href="Emergency" class="max-lg:hidden relative inline-block cursor-pointer rounded bg-rose-600 px-3 py-2 text-white text-lg no-underline hover:bg-rose-400">
                Emergency
            </a>
            <a @onclick="ResetAllMenus" href="Emergency" class="flex items-center justify-center lg:hidden relative cursor-pointer rounded bg-rose-600 p-1 text-white text-lg font-semibold no-underline hover:bg-rose-400 max-md:h-7 max-md:w-9">
                SOS
            </a>
        </div>
    </nav>
</div>

@code
{
    // note: overridden methods
    protected override void OnInitialized()
    {
        _objRef = DotNetObjectReference.Create(this);

        AddMenu(_elevate);
        AddMenu(_educate);
        AddMenu(_innovate);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender) return;

        _navBar = this;
        NavBarService.SetNavBar(_navBar);
    }

    public void Dispose()
    {
        _objRef?.Dispose();
    }

    private NavBar? _navBar;

    // note: navigation bar menu component
    private Guid _elevate = Guid.NewGuid();
    private Guid _educate = Guid.NewGuid();
    private Guid _innovate = Guid.NewGuid();

    private DotNetObjectReference<NavBar> _objRef = null!;
    private readonly Dictionary<Guid, bool> _menuStates = new();


    public void AddMenu(Guid menuId)
    {
        _menuStates.TryAdd(menuId, false);
    }

    private void ToggleMenuVisibility(Guid menuId)
    {
        if (IsMenuVisible(menuId))
        {
            ToggleMenuInvisible(menuId);
            return;
        }

        ToggleMenuVisible(menuId);
    }

    public async void ToggleMenuVisible(Guid menuId)
    {
        ResetAllMenus();

        await JsRuntime.InvokeVoidAsync("setupFocusListener", _objRef, menuId.ToString(), "ResetAllMenus", "click");

        _menuStates[menuId] = true;

        StateHasChanged();
    }

    public async void ToggleMenuInvisible(Guid menuId)
    {
        if (_menuStates.ContainsKey(menuId))
        {
            _menuStates[menuId] = false;
        }

        await JsRuntime.InvokeVoidAsync("removeFocusListener", menuId.ToString(), "click");
        StateHasChanged();
    }

    public void ToggleMenuInvisible()
    {
        foreach (var key in _menuStates.Keys.ToList())
        {
            _menuStates[key] = false;
        }
    }

    public bool IsMenuVisible(Guid menuId)
    {
        return _menuStates.TryGetValue(menuId, out var isVisible) && isVisible;
    }

    [JSInvokable]
    public void ResetAllMenus()
    {
        foreach (var key in _menuStates.Keys.ToList())
        {
            _menuStates[key] = false;
        }

        StateHasChanged();
    }

    // note: mobile navigation menu
    private void ToggleMobileNavigationMenu()
    {
        if (MobileNavMenuService.IsMobileNavigationMenuVisible)
        {
            MobileNavMenuService.HideDrawerNavigationMenu();
        }
        else
        {
            MobileNavMenuService.ShowDrawerNavigation();
        }
    }

    private string _navBarBackground = "bg-primary-500";

    public void UpdateNavBarBackground(string? value)
    {
        _navBarBackground = value ?? "bg-primary-500";
        StateHasChanged();
    }
}